{"mappings":"AAeA,SAASA,GAAcC,SAAEA,EAAQC,MAAEA,IACjB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,KACNH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,IAGRQ,MAAKN,IACJO,QAAQC,IAAI,GAAGR,IAAU,IAE1BS,OAAMR,IACLM,QAAQC,IAAI,GAAGP,IAAS,G,CAhCjBS,SAASC,cAAc,aAE/BC,iBAAiB,UAEtB,SAA4BC,GAC1BA,EAAMC,iBACN,IAAIhB,EAAQiB,OAAOF,EAAMG,OAAOC,SAASnB,MAAMoB,OAC/C,MAAMC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OACnD,IAAK,IAAIrB,EAAW,EAAGA,GAAYuB,EAAQvB,IACzCC,GAASqB,EACTvB,EAAc,C,SAAEC,E,MAAUC,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form.form');\n\nform.addEventListener('submit', startcreatePromise);\n\nfunction startcreatePromise(event) {\n  event.preventDefault();\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  for (let position = 1; position <= amount; position++) {\n    delay += step;\n    createPromise({ position, delay });\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(resolve => {\n      console.log(`${resolve}`);\n    })\n    .catch(reject => {\n      console.log(`${reject}`);\n    });\n}\n\n// console.log(delay.value);\n// console.log(amount.value);\n// console.log(step.value);\n// console.log(this);\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","then","console","log","catch","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount"],"version":3,"file":"03-promises.c3aef582.js.map"}