{"mappings":"YAqBA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,aAAY,WACNN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA9BMS,SAASC,cAAc,aAE/BC,iBAAiB,UAEtB,SAA4BC,GAC1BA,EAAMC,iBAIN,IAHA,IAAIb,EAAQc,OAAOF,EAAMG,OAAOC,SAAShB,MAAMiB,OACzCC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAC1ClB,EAAW,EAAGA,GAAYoB,EAAQpB,IAEzCD,EAAc,CAAEC,WAAUC,MAD1BA,GAASkB,IAENE,MAAK,SAAAf,GACJgB,QAAQC,IAAI,GAAWd,OAARH,G,IAEhBkB,OAAM,SAAAjB,GACLe,QAAQC,IAAI,GAAUd,OAAPF,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form.form');\n\nform.addEventListener('submit', startcreatePromise);\n\nfunction startcreatePromise(event) {\n  event.preventDefault();\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  for (let position = 1; position <= amount; position++) {\n    delay += step;\n    createPromise({ position, delay })\n      .then(resolve => {\n        console.log(`${resolve}`);\n      })\n      .catch(reject => {\n        console.log(`${reject}`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","concat","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","then","console","log","catch"],"version":3,"file":"03-promises.03641e45.js.map"}