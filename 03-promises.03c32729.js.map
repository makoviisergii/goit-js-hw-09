{"mappings":"YAeA,SAASA,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACjB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,WACNH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAuCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAErDA,E,IAGFS,MAAK,SAAAP,GACJQ,QAAQC,IAAI,GAAWH,OAARN,G,IAEhBU,OAAM,SAAAT,GACLO,QAAQC,IAAI,GAAUH,OAAPL,G,IAhCRU,SAASC,cAAc,aAE/BC,iBAAiB,UAEtB,SAA4BC,GAC1BA,EAAMC,iBAIN,IAHA,IAAIjB,EAAQkB,OAAOF,EAAMG,OAAOC,SAASpB,MAAMqB,OACzCC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAC1CtB,EAAW,EAAGA,GAAYwB,EAAQxB,IAEzCF,EAAc,CAAEE,WAAUC,MAD1BA,GAASsB,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form.form');\n\nform.addEventListener('submit', startcreatePromise);\n\nfunction startcreatePromise(event) {\n  event.preventDefault();\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  for (let position = 1; position <= amount; position++) {\n    delay += step;\n    createPromise({ position, delay });\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(resolve => {\n      console.log(`${resolve}`);\n    })\n    .catch(reject => {\n      console.log(`${reject}`);\n    });\n}\n\n// console.log(delay.value);\n// console.log(amount.value);\n// console.log(step.value);\n// console.log(this);\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","concat","then","console","log","catch","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount"],"version":3,"file":"03-promises.03c32729.js.map"}