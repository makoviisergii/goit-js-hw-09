{"mappings":"AAqBA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,aAAY,KACNN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CA9BAQ,SAASC,cAAc,aAE/BC,iBAAiB,UAEtB,SAA4BC,GAC1BA,EAAMC,iBACN,IAAIZ,EAAQa,OAAOF,EAAMG,OAAOC,SAASf,MAAMgB,OAC/C,MAAMC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OACnD,IAAK,IAAIjB,EAAW,EAAGA,GAAYmB,EAAQnB,IACzCC,GAASiB,EACTnB,EAAc,C,SAAEC,E,MAAUC,IACvBmB,MAAKd,IACJe,QAAQC,IAAI,GAAGhB,IAAU,IAE1BiB,OAAMhB,IACLc,QAAQC,IAAI,GAAGf,IAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form.form');\n\nform.addEventListener('submit', startcreatePromise);\n\nfunction startcreatePromise(event) {\n  event.preventDefault();\n  let delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  for (let position = 1; position <= amount; position++) {\n    delay += step;\n    createPromise({ position, delay })\n      .then(resolve => {\n        console.log(`${resolve}`);\n      })\n      .catch(reject => {\n        console.log(`${reject}`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","then","console","log","catch"],"version":3,"file":"03-promises.5838a581.js.map"}